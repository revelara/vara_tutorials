declare const useAccount: () => {
    extensions: import("@polkadot/extension-inject/types").InjectedExtension[] | undefined;
    accounts: import("@polkadot/extension-inject/types").InjectedAccountWithMeta[] | undefined;
    account: import("../types").Account | undefined;
    isAccountReady: boolean;
    login: (account: import("@polkadot/extension-inject/types").InjectedAccountWithMeta) => void;
    logout: () => void;
};
declare const useAlert: () => import("../types/alert").AlertContainerFactory;
declare const useApi: () => {
    switchNetwork: (args: {
        endpoint: string | string[];
        autoConnectMs?: number | false | undefined;
        headers?: Record<string, string> | undefined;
        timeout?: number | undefined;
    } | {
        spec: string;
        sharedSandbox?: import("@polkadot/rpc-provider").ScProvider | undefined;
    }) => Promise<void>;
} & ({
    api: undefined;
    isApiReady: false;
    isV110Runtime: false;
} | {
    api: import("@gear-js/api").GearApi;
    isApiReady: true;
    isV110Runtime: boolean;
});
export { useAccount, useAlert, useApi };
