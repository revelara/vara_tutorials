'use strict';

var utils = require('./utils.js');
var importObj = require('./importObj.js');

async function readState(wasmBytes, initialSize, pages, inputValue, blockTimestamp, blockNumber) {
    const memory = new WebAssembly.Memory({ initial: initialSize });
    const module = await WebAssembly.instantiate(wasmBytes, importObj.default(memory, true, inputValue, blockTimestamp, blockNumber));
    Object.keys(pages).forEach((pageNumber) => {
        const start = +pageNumber * utils.PAGE_SIZE;
        const end = start + utils.PAGE_SIZE;
        const page = pages[pageNumber];
        for (let i = start; i < end; i++) {
            new Uint8Array(memory.buffer)[i] = page[i % utils.PAGE_SIZE];
        }
    });
    const { exports } = module.instance;
    return exports?.meta_state ? new Uint8Array(utils.getExportValue(memory, exports.meta_state)) : null;
}

exports.readState = readState;
